[{"/Users/savrasov/Projects/queueApp/client/src/index.js":"1","/Users/savrasov/Projects/queueApp/client/src/reportWebVitals.js":"2","/Users/savrasov/Projects/queueApp/client/src/App.js":"3","/Users/savrasov/Projects/queueApp/client/src/store/index.js":"4","/Users/savrasov/Projects/queueApp/client/src/Main.js":"5","/Users/savrasov/Projects/queueApp/client/src/store/roleReducer.js":"6","/Users/savrasov/Projects/queueApp/client/src/routes.js":"7","/Users/savrasov/Projects/queueApp/client/src/store/asyncActions.js":"8","/Users/savrasov/Projects/queueApp/client/src/components/navbar.js":"9","/Users/savrasov/Projects/queueApp/client/src/components/Loader.js":"10","/Users/savrasov/Projects/queueApp/client/src/store/userReducer.js":"11","/Users/savrasov/Projects/queueApp/client/src/store/serviceReducer.js":"12","/Users/savrasov/Projects/queueApp/client/src/store/categoriesReducer.js":"13","/Users/savrasov/Projects/queueApp/client/src/store/actions/categories.js":"14","/Users/savrasov/Projects/queueApp/client/src/http/index.js":"15","/Users/savrasov/Projects/queueApp/client/src/routes/EmployeeRoutes.js":"16","/Users/savrasov/Projects/queueApp/client/src/routes/UserRoutes.js":"17","/Users/savrasov/Projects/queueApp/client/src/routes/UnAuthorizeRoutes.js":"18","/Users/savrasov/Projects/queueApp/client/src/components/Menu/AdminMenu.js":"19","/Users/savrasov/Projects/queueApp/client/src/components/Menu/EmployeeMenu.js":"20","/Users/savrasov/Projects/queueApp/client/src/components/Menu/UserMenu.js":"21","/Users/savrasov/Projects/queueApp/client/src/pages/Register.js":"22","/Users/savrasov/Projects/queueApp/client/src/pages/admin/AuthPage.js":"23","/Users/savrasov/Projects/queueApp/client/src/pages/admin/AdminPage.js":"24","/Users/savrasov/Projects/queueApp/client/src/pages/admin/TicketsPage.js":"25","/Users/savrasov/Projects/queueApp/client/src/components/SuccessActivation/SuccessActivation.js":"26","/Users/savrasov/Projects/queueApp/client/src/components/SuccessRegistration/SuccessRegistration.js":"27","/Users/savrasov/Projects/queueApp/client/src/components/404/NotFound.js":"28","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/newRecord/Record.js":"29","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/TicketsMainPage.js":"30","/Users/savrasov/Projects/queueApp/client/src/components/RegisterForm/RegisterForm.js":"31","/Users/savrasov/Projects/queueApp/client/src/hooks/message.hook.js":"32","/Users/savrasov/Projects/queueApp/client/src/components/CircleLoader.js":"33","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/newRecord/RecordForm.js":"34","/Users/savrasov/Projects/queueApp/client/src/components/Calendar/YearCalendar.js":"35","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/List/List.js":"36","/Users/savrasov/Projects/queueApp/client/src/utils/formatDate.js":"37","/Users/savrasov/Projects/queueApp/client/src/components/FormFooter/FormFooter.js":"38","/Users/savrasov/Projects/queueApp/client/src/components/ClientForm/ClientForm.js":"39","/Users/savrasov/Projects/queueApp/client/src/components/Employee/Employee.js":"40","/Users/savrasov/Projects/queueApp/client/src/components/TimeTable/TimeTable.js":"41","/Users/savrasov/Projects/queueApp/client/src/UI/DropDown/DropDown.js":"42","/Users/savrasov/Projects/queueApp/client/src/UI/Calendar/Calendar.js":"43","/Users/savrasov/Projects/queueApp/client/src/UI/Input/Input.js":"44","/Users/savrasov/Projects/queueApp/client/src/UI/SearchForm/SearchForm.js":"45","/Users/savrasov/Projects/queueApp/client/src/UI/RadioSelect/RadioSelect.js":"46","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/List/ListItem.js":"47","/Users/savrasov/Projects/queueApp/client/src/utils/timeline.js":"48","/Users/savrasov/Projects/queueApp/client/src/utils/getReadyToSubmission.js":"49","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/RecordOverwrite/RecordOverwrite.js":"50","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/RecordEdit/RecordEdit.js":"51","/Users/savrasov/Projects/queueApp/client/src/hooks/auth.hook.js":"52","/Users/savrasov/Projects/queueApp/client/src/routes/AdminRoutes.js":"53","/Users/savrasov/Projects/queueApp/client/src/pages/admin/Services/ServiceCreatePage.js":"54","/Users/savrasov/Projects/queueApp/client/src/pages/admin/Users/UserDetailPage.js":"55","/Users/savrasov/Projects/queueApp/client/src/components/Category/CategoriesList.js":"56","/Users/savrasov/Projects/queueApp/client/src/pages/admin/Users/UserCreatePage.js":"57","/Users/savrasov/Projects/queueApp/client/src/components/Category/CreateCategory.js":"58","/Users/savrasov/Projects/queueApp/client/src/components/Users/UsersList.js":"59","/Users/savrasov/Projects/queueApp/client/src/components/Category/EditCategory.js":"60","/Users/savrasov/Projects/queueApp/client/src/components/Service/ServicesList.js":"61","/Users/savrasov/Projects/queueApp/client/src/components/Service/EditService.js":"62","/Users/savrasov/Projects/queueApp/client/src/components/Service/Create.js":"63","/Users/savrasov/Projects/queueApp/client/src/components/Users/Detail.js":"64","/Users/savrasov/Projects/queueApp/client/src/components/Users/Create.js":"65","/Users/savrasov/Projects/queueApp/client/src/components/Users/UsersDropdown.js":"66","/Users/savrasov/Projects/queueApp/client/src/components/Category/CategoryDropdown.js":"67","/Users/savrasov/Projects/queueApp/client/src/store/actions/users.js":"68","/Users/savrasov/Projects/queueApp/client/src/store/actions/services.js":"69","/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonEdit.js":"70","/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonCreate.js":"71","/Users/savrasov/Projects/queueApp/client/src/store/ticketsReducer.js":"72","/Users/savrasov/Projects/queueApp/client/src/store/actions/tickets.js":"73","/Users/savrasov/Projects/queueApp/client/src/UI/accountIcon/Icon.js":"74","/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonCancel.js":"75","/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonSave.js":"76","/Users/savrasov/Projects/queueApp/client/src/pages/visitor/HomePage.js":"77","/Users/savrasov/Projects/queueApp/client/src/components/VisitorRequest/Request.js":"78","/Users/savrasov/Projects/queueApp/client/src/components/Account/userAccount.js":"79","/Users/savrasov/Projects/queueApp/client/src/components/Account/UserAccount.js":"80","/Users/savrasov/Projects/queueApp/client/src/components/UserProfile/UserProfile.js":"81","/Users/savrasov/Projects/queueApp/client/src/components/ChangePassword/ChangePassword.js":"82"},{"size":628,"mtime":1637585670612,"results":"83","hashOfConfig":"84"},{"size":362,"mtime":1608002285954,"results":"85","hashOfConfig":"84"},{"size":197,"mtime":1638161589413,"results":"86","hashOfConfig":"84"},{"size":694,"mtime":1638768537015,"results":"87","hashOfConfig":"84"},{"size":2601,"mtime":1638872436655,"results":"88","hashOfConfig":"84"},{"size":1862,"mtime":1638868306275,"results":"89","hashOfConfig":"84"},{"size":701,"mtime":1638161453640,"results":"90","hashOfConfig":"84"},{"size":2666,"mtime":1638872618430,"results":"91","hashOfConfig":"84"},{"size":476,"mtime":1638858593140,"results":"92","hashOfConfig":"84"},{"size":233,"mtime":1611904583156,"results":"93","hashOfConfig":"84"},{"size":1494,"mtime":1638760977193,"results":"94","hashOfConfig":"84"},{"size":1760,"mtime":1638760977192,"results":"95","hashOfConfig":"84"},{"size":1996,"mtime":1638760977191,"results":"96","hashOfConfig":"84"},{"size":1439,"mtime":1638760977189,"results":"97","hashOfConfig":"84"},{"size":539,"mtime":1638526172854,"results":"98","hashOfConfig":"84"},{"size":877,"mtime":1639053150056,"results":"99","hashOfConfig":"84"},{"size":721,"mtime":1639040209718,"results":"100","hashOfConfig":"84"},{"size":1069,"mtime":1637754695315,"results":"101","hashOfConfig":"84"},{"size":1753,"mtime":1638856524830,"results":"102","hashOfConfig":"84"},{"size":1453,"mtime":1638965815446,"results":"103","hashOfConfig":"84"},{"size":1670,"mtime":1639030804911,"results":"104","hashOfConfig":"84"},{"size":194,"mtime":1636952402319,"results":"105","hashOfConfig":"84"},{"size":3774,"mtime":1638860343325,"results":"106","hashOfConfig":"84"},{"size":397,"mtime":1638856283078,"results":"107","hashOfConfig":"84"},{"size":327,"mtime":1638168145238,"results":"108","hashOfConfig":"84"},{"size":884,"mtime":1638161826679,"results":"109","hashOfConfig":"84"},{"size":1364,"mtime":1638161837606,"results":"110","hashOfConfig":"84"},{"size":522,"mtime":1637208060988,"results":"111","hashOfConfig":"84"},{"size":1552,"mtime":1638860575879,"results":"112","hashOfConfig":"84"},{"size":1658,"mtime":1638850850054,"results":"113","hashOfConfig":"84"},{"size":5338,"mtime":1638860542099,"results":"114","hashOfConfig":"84"},{"size":200,"mtime":1608094694430,"results":"115","hashOfConfig":"84"},{"size":631,"mtime":1635836199019,"results":"116","hashOfConfig":"84"},{"size":4828,"mtime":1638859457078,"results":"117","hashOfConfig":"84"},{"size":747,"mtime":1635479443998,"results":"118","hashOfConfig":"84"},{"size":4039,"mtime":1638851505348,"results":"119","hashOfConfig":"84"},{"size":137,"mtime":1634187967433,"results":"120","hashOfConfig":"84"},{"size":701,"mtime":1636369468914,"results":"121","hashOfConfig":"84"},{"size":3142,"mtime":1637931349364,"results":"122","hashOfConfig":"84"},{"size":908,"mtime":1635917276496,"results":"123","hashOfConfig":"84"},{"size":5998,"mtime":1638860486896,"results":"124","hashOfConfig":"84"},{"size":834,"mtime":1635510048106,"results":"125","hashOfConfig":"84"},{"size":1119,"mtime":1635338101904,"results":"126","hashOfConfig":"84"},{"size":164,"mtime":1639041796629,"results":"127","hashOfConfig":"84"},{"size":381,"mtime":1634634526659,"results":"128","hashOfConfig":"84"},{"size":426,"mtime":1635240214795,"results":"129","hashOfConfig":"84"},{"size":2182,"mtime":1638859380468,"results":"130","hashOfConfig":"84"},{"size":610,"mtime":1636459640143,"results":"131","hashOfConfig":"84"},{"size":533,"mtime":1636518302065,"results":"132","hashOfConfig":"84"},{"size":4577,"mtime":1638160971814,"results":"133","hashOfConfig":"84"},{"size":4161,"mtime":1639033583036,"results":"134","hashOfConfig":"84"},{"size":1021,"mtime":1637229354558,"results":"135","hashOfConfig":"84"},{"size":2224,"mtime":1638859772574,"results":"136","hashOfConfig":"84"},{"size":242,"mtime":1638363090495,"results":"137","hashOfConfig":"84"},{"size":883,"mtime":1638167383335,"results":"138","hashOfConfig":"84"},{"size":2369,"mtime":1638760977179,"results":"139","hashOfConfig":"84"},{"size":1502,"mtime":1638860002631,"results":"140","hashOfConfig":"84"},{"size":1660,"mtime":1638859607802,"results":"141","hashOfConfig":"84"},{"size":3184,"mtime":1638760977183,"results":"142","hashOfConfig":"84"},{"size":1960,"mtime":1638859619537,"results":"143","hashOfConfig":"84"},{"size":2571,"mtime":1638760977181,"results":"144","hashOfConfig":"84"},{"size":5672,"mtime":1638760977180,"results":"145","hashOfConfig":"84"},{"size":5092,"mtime":1638760977180,"results":"146","hashOfConfig":"84"},{"size":7845,"mtime":1638860381593,"results":"147","hashOfConfig":"84"},{"size":4543,"mtime":1638165478299,"results":"148","hashOfConfig":"84"},{"size":1500,"mtime":1638356087160,"results":"149","hashOfConfig":"84"},{"size":1693,"mtime":1638357118793,"results":"150","hashOfConfig":"84"},{"size":763,"mtime":1638760977190,"results":"151","hashOfConfig":"84"},{"size":1266,"mtime":1638760977189,"results":"152","hashOfConfig":"84"},{"size":263,"mtime":1638442519385,"results":"153","hashOfConfig":"84"},{"size":293,"mtime":1638526975359,"results":"154","hashOfConfig":"84"},{"size":2317,"mtime":1638785267716,"results":"155","hashOfConfig":"84"},{"size":835,"mtime":1638785351681,"results":"156","hashOfConfig":"84"},{"size":411,"mtime":1638967638248,"results":"157","hashOfConfig":"84"},{"size":176,"mtime":1638859502838,"results":"158","hashOfConfig":"84"},{"size":213,"mtime":1638859583504,"results":"159","hashOfConfig":"84"},{"size":965,"mtime":1638869319758,"results":"160","hashOfConfig":"84"},{"size":619,"mtime":1638871170165,"results":"161","hashOfConfig":"84"},{"size":391,"mtime":1638871057983,"results":"162","hashOfConfig":"84"},{"size":1923,"mtime":1639048524243,"results":"163","hashOfConfig":"84"},{"size":4604,"mtime":1639052962520,"results":"164","hashOfConfig":"84"},{"size":2286,"mtime":1639052927580,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"av9cg4",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"168"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"168"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"168"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"168"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"168"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"168"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"168"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"168"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"168"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"168"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"168"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"168"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"168"},{"filePath":"344","messages":"345","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"168"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"/Users/savrasov/Projects/queueApp/client/src/index.js",[],["353","354"],"/Users/savrasov/Projects/queueApp/client/src/reportWebVitals.js",[],"/Users/savrasov/Projects/queueApp/client/src/App.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/index.js",[],"/Users/savrasov/Projects/queueApp/client/src/Main.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/roleReducer.js",[],"/Users/savrasov/Projects/queueApp/client/src/routes.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/asyncActions.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/navbar.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Loader.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/userReducer.js",["355"],"const GET_USERS = \"GET_USERS\";\nconst CREATE_USER = \"CREATE_USER\"\nconst FILTER_USERS = \"FILTER_USERS\"\nconst SUCCESS_MESSAGE = \"SUCCESS_MESSAGE\"\nconst START_LOAD = \"START_LOAD\"\nconst END_LOAD = \"END_LOAD\"\n\nconst initialState = {\n  users: [],\n  message: null,\n  errors: null,\n  isLoading: false\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case START_LOAD: \n      return {\n        ...state,\n        isLoading:true\n    }\n    case GET_USERS:\n      return {\n        ...state,\n        users: [...action.payload],\n        isLoading:false\n      };\n    case CREATE_USER:\n      const newState = {...state}\n      newState.users.push(action.payload.user)\n      return {\n        ...state,\n        users: [...newState.users],\n        message: action.payload.message,\n        isLoading: false\n      }  \n      case FILTER_USERS:\n        const filtered = state.users.filter(user => user._id !== action.payload)\n        return {\n          ...state,\n          users: [...filtered],\n          \n        }\n        case END_LOAD: \n        return {\n          ...state,\n          isLoading: false\n        }\n    default:\n      return state;\n  }\n};\n\nexport const getUsers = (payload) => ({ type: GET_USERS, payload });\nexport const createUser = (payload) => ({ type: CREATE_USER, payload})\nexport const filterUsers = (payload) => ({ type: FILTER_USERS, payload})\nexport const startLoading = () => ({type: START_LOAD})\nexport const endLoading  = () => ({ type: END_LOAD})\n","/Users/savrasov/Projects/queueApp/client/src/store/serviceReducer.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/categoriesReducer.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/actions/categories.js",[],"/Users/savrasov/Projects/queueApp/client/src/http/index.js",[],"/Users/savrasov/Projects/queueApp/client/src/routes/EmployeeRoutes.js",[],"/Users/savrasov/Projects/queueApp/client/src/routes/UserRoutes.js",[],"/Users/savrasov/Projects/queueApp/client/src/routes/UnAuthorizeRoutes.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Menu/AdminMenu.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Menu/EmployeeMenu.js",["356"],"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Icon } from \"../../UI/accountIcon/Icon\";\nimport { UserAccount } from \"../Account/UserAccount\";\n\nexport const EmployeeMenu = () => {\n  const { userId } = useSelector((state) => state.userRole);\n  const { users } = useSelector((state) => state.users);\n\n  const currentUser = users.filter((user) => user._id === userId);\n\n  const [open, setOpen] = useState(false);\n\n  const links = [\n    {\n      title: \"Создать запись\",\n      path: \"/record/new\",\n    },\n    {\n      title: \"Список записей\",\n      path: \"/\",\n    },\n  ];\n\n  return (\n    <nav>\n      <div className=\"nav-wrapper blue darken-2\">\n        <span className=\"brand-logo\">Электронная очередь</span>\n\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          {links.map((link, i) => {\n            return (\n              <li key={i}>\n                <NavLink to={link.path}>{link.title}</NavLink>\n              </li>\n            );\n          })}\n\n          <li>\n            {currentUser.length ? (\n              <a onClick={() => setOpen((prev) => !prev)}>\n                <Icon props={currentUser} />\n              </a>\n            ) : null}\n          </li>\n        </ul>\n      </div>\n      <div>\n        <UserAccount isOpen={open} isClose={() => setOpen(false)} />\n      </div>\n    </nav>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Menu/UserMenu.js",["357","358"],"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, roleReducer } from \"../../store/roleReducer\";\nimport { Icon } from \"../../UI/accountIcon/Icon\";\nimport { UserAccount } from \"../Account/UserAccount\";\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch(roleReducer);\n  const { userId } = useSelector((state) => state.userRole);\n  const { users } = useSelector((state) => state.users);\n  const currentUser = users.filter((user) => user._id === userId);\n\n  const [open, setOpen] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"access_token\");\n    dispatch(logout());\n  };\n\n  const links = [\n    {\n      title: \"Создать запись\",\n      path: \"/record/new\",\n    },\n    {\n      title: \"Профиль\",\n      path: \"/profile\",\n    },\n  ];\n\n  return (\n    <nav>\n      <div className=\"nav-wrapper blue darken-2\">\n        <span className=\"brand-logo\">Электронная очередь</span>\n\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          {links.map((link, i) => {\n            return (\n              <li key={i}>\n                <NavLink to={link.path}>{link.title}</NavLink>\n              </li>\n            );\n          })}\n\n          <li>\n            {currentUser.length ? (\n              <a onClick={() => setOpen((prev) => !prev)}>\n                <Icon props={currentUser} />\n              </a>\n            ) : null}\n          </li>\n        </ul>\n      </div>\n      <div>\n        <UserAccount isOpen={open} isClose={() => setOpen(false)} />\n      </div>\n    </nav>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/pages/Register.js",[],"/Users/savrasov/Projects/queueApp/client/src/pages/admin/AuthPage.js",[],"/Users/savrasov/Projects/queueApp/client/src/pages/admin/AdminPage.js",[],"/Users/savrasov/Projects/queueApp/client/src/pages/admin/TicketsPage.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/SuccessActivation/SuccessActivation.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/SuccessRegistration/SuccessRegistration.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/404/NotFound.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Tickets/newRecord/Record.js",["359","360"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { RecordForm } from \"./RecordForm\";\nimport { CircleLoader } from \"../../../components/CircleLoader\";\nimport styles from \"./record.module.css\";\n\nexport const Record = () => {\n  const history = useHistory();\n  const { services } = useSelector((state) => state.services);\n\n  const [serviceList, setServiceList] = useState(services);\n  const [serviceId, setServiceId] = useState(null);\n  const [ticketsList] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const [userId, setUserId] = useState(null);\n  const [serviceTitle, setServiceTitle] = useState(\"Выберите услугу\");\n\n  const changeService = (e) => {\n    setServiceTitle(e.target.innerText);\n    setDate(new Date());\n    setUserId(e.target.dataset.employee);\n    setServiceId(e.target.dataset.serviceId);\n  };\n\n  const updateDate = (d) => {\n    setDate(d);\n  };\n\n  const onClose = () => {\n    history.push(\"/\");\n  };\n\n  /*   if (loading) {\n    <CircleLoader />;\n  } */\n\n  return (\n    <div className={styles.MainContainer}>\n      <div className={styles.recordContent}>\n        {serviceList && (\n          <RecordForm\n            props={{\n              serviceList,\n              serviceTitle,\n              serviceId,\n              userId,\n              ticketsList,\n              changeService,\n              date,\n              updateDate,\n              onClose,\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/TicketsMainPage.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/RegisterForm/RegisterForm.js",[],"/Users/savrasov/Projects/queueApp/client/src/hooks/message.hook.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/CircleLoader.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Tickets/newRecord/RecordForm.js",["361"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { DropDown } from \"../../../UI/DropDown/DropDown\";\nimport { Calendar } from \"../../../UI/Calendar/Calendar\";\nimport { Employee } from \"../../../components/Employee/Employee\";\nimport M from \"materialize-css\";\nimport styles from \"./record.module.css\";\nimport { ClientForm } from \"../../../components/ClientForm/ClientForm\";\nimport { FormFooter } from \"../../../components/FormFooter/FormFooter\";\nimport { formatDate } from \"../../../utils/formatDate\";\n\nimport { TimeTable } from \"../../../components/TimeTable/TimeTable\";\nimport { RadioSelect } from \"../../../UI/RadioSelect/RadioSelect\";\n\nimport { useMessage } from \"../../../hooks/message.hook\";\nimport { useSelector } from \"react-redux\";\nimport api from \"../../../http\";\n\nexport const RecordForm = ({ props }) => {\n  const clientData = JSON.parse(localStorage.getItem(\"clientData\"));\n\n  const { services } = useSelector((state) => state.services);\n\n  let clientInfo = {\n    firstname: \"\",\n    lastname: \"\",\n    surname: \"\",\n    email: \"\",\n    phone: \"\",\n  };\n\n  if (clientData) {\n    clientInfo = {\n      firstname: clientData[0].firstname,\n      lastname: clientData[0].lastname,\n      surname: clientData[0].surname,\n      email: clientData[0].email,\n      phone: clientData[0].phone,\n    };\n  }\n\n  //const { token } = useSelector((state) => state.userRole);\n  const message = useMessage();\n\n  const {\n    //serviceList: services,\n    serviceTitle,\n    serviceId,\n    date,\n    updateDate,\n    changeService,\n    userId,\n    onClose,\n  } = props;\n\n  const [employee, setEmployee] = useState([]);\n  const [employeeId, setEmployeeId] = useState(null);\n  const [serviceType, setServiceType] = useState(null);\n  // const [selectedDate, setSelectedDate] = useState(date);\n\n  const [form, setForm] = useState({ ...clientInfo });\n\n  useEffect(() => {\n    M.updateTextFields();\n  }, []);\n\n  const filterDay = true;\n  const minDate = true;\n\n  useEffect(() => {\n    if (!userId) {\n      return;\n    }\n    const getEmployee = async () => {\n      try {\n        const response = await api.get(\"/client/users/\", {\n          params: { userId, date: formatDate(date) },\n        });\n\n        setEmployee(response.data);\n        setEmployeeId(response.data._id);\n      } catch (error) {}\n    };\n    getEmployee();\n  }, [date, userId]);\n\n  const onSelect = (e) => {\n    if (e) {\n      setServiceType(e.target.dataset.stype);\n    }\n  };\n\n  const changeForm = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const onWrite = async () => {\n    const date = JSON.parse(localStorage.getItem(\"date\"));\n\n    const { firstname, surname, lastname, email, phone } = form;\n    const body = {\n      firstname,\n      lastname,\n      surname,\n      phone,\n      email,\n      user: employeeId,\n      serviceType,\n      service: serviceId,\n      date,\n    };\n\n    try {\n      const response = await api.post(\"/tickets/create\", { ...body });\n      message(response.data.message);\n      onClose();\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <div className={styles.FormContent}>\n        <h4 className={styles.recordHeader}>Создаем запись</h4>\n\n        <ClientForm props={{ form, changeForm }} />\n        <h5>Данные об услуге</h5>\n        <div className={styles.content}>\n          <h6>Выберите услугу</h6>\n          <DropDown props={{ services, serviceTitle, changeService }} />\n        </div>\n        <div className={styles.content}>\n          <h6>Тип услуги:</h6>\n          <div>\n            <RadioSelect\n              type=\"radio\"\n              group=\"group\"\n              data=\"consultation\"\n              value=\"Консультация (длительность приема 15 минут)\"\n              onChange={onSelect}\n            />\n            <RadioSelect\n              type=\"radio\"\n              group=\"group\"\n              data=\"submission\"\n              value=\"Подача документов (длительность приема 1 час)\"\n              onChange={onSelect}\n            />\n          </div>\n        </div>\n        {employee && <Employee props={{ employee }} />}\n        <h5>Дата и время приема</h5>\n        <div className={styles.content}>\n          <h6 style={{ paddingTop: \"30px\" }}>Выберите дату:</h6>\n          <Calendar props={{ updateDate, date, filterDay, minDate }} />\n        </div>\n\n        <div className={styles.content}>\n          <h6>Доступное время для записи</h6>\n          <div className={styles.TimeBoxContainer}>\n            {employeeId !== null && (\n              <TimeTable props={{ date, employeeId, serviceType }} />\n            )}\n          </div>\n        </div>\n      </div>\n      <FormFooter props={{ onClose, onWrite }} />\n    </>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Calendar/YearCalendar.js",[],["362","363"],"/Users/savrasov/Projects/queueApp/client/src/components/Tickets/List/List.js",["364","365"],"import React, { useState, useEffect } from \"react\";\nimport { ListItem } from \"./ListItem\";\nimport { Loader } from \"../../Loader\";\nimport M from \"materialize-css\";\nimport { RecordEdit } from \"../RecordEdit/RecordEdit\";\nimport { RecordOverwrite } from \"../RecordOverwrite/RecordOverwrite\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useMessage } from \"../../../hooks/message.hook\";\n\nimport { updateTicketStatus } from \"../../../store/actions/tickets\";\n\nexport const List = ({ props }) => {\n  const { date, name } = props;\n  const message = useMessage();\n\n  const [isActive, setIsActive] = useState(false);\n  const [isActiveRewrite, setIsActiveRewrite] = useState(false);\n\n  const { services } = useSelector((state) => state.services);\n  const { tickets, loading } = useSelector((state) => state.tickets);\n  const [ticketList, setTicketList] = useState([]);\n  const [clientName, setClientName] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    M.AutoInit();\n  }, []);\n\n  useEffect(() => {\n    setClientName(name);\n  }, [name]);\n\n  useEffect(() => {\n    if (!clientName) {\n      return;\n    }\n\n    const ticketsByName = [];\n    tickets.forEach((ticket) => {\n      if (ticket.firstname.includes(name)) {\n        ticketsByName.push(ticket);\n      }\n    });\n\n    setTicketList(ticketsByName);\n  }, [clientName]);\n\n  useEffect(() => {\n    const selectedDate = new Date(date);\n    const ticketsByDate = [];\n    tickets.forEach((ticket) => {\n      const ticketDate = new Date(ticket.date);\n\n      if (\n        ticketDate.toLocaleDateString() === selectedDate.toLocaleDateString()\n      ) {\n        ticketsByDate.push(ticket);\n      }\n    });\n\n    setTicketList(ticketsByDate);\n  }, [date, tickets]);\n\n  const filterData = (ticketId) => {\n    const clientData = ticketList.filter((item) => item._id === ticketId);\n\n    localStorage.setItem(\"clientData\", JSON.stringify(clientData));\n  };\n\n  const changeItem = (id) => {\n    filterData(id);\n    setIsActive(true);\n  };\n\n  const editTicketList = (_id, note) => {\n    ticketList.map((ticket) => {\n      if (ticket._id === _id) {\n        ticket.note = note;\n      }\n    });\n  };\n\n  const editTicketStatus = (_id, status) => {\n    dispatch(updateTicketStatus({ _id, status }));\n    if (!loading) {\n      message(\"Статус изменен\");\n    }\n  };\n\n  const openRewriteForm = (id) => {\n    filterData(id);\n    setIsActiveRewrite(true);\n  };\n\n  const onClose = () => {\n    setIsActive(false);\n    setIsActiveRewrite(false);\n    localStorage.removeItem(\"clientData\");\n  };\n\n  const onWrite = () => {};\n\n  if (loading) {\n    <Loader />;\n  }\n\n  if (!tickets.length) {\n    return <Loader />;\n  }\n\n  if (!ticketList.length) {\n    return (\n      <div>\n        <h1>Записей не найдено</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row col s12\">\n        <div className=\"card\" style={{ padding: \"20px\" }}>\n          <table className=\"striped\">\n            <thead style={{ backgroundColor: \"c2c2c2\" }}>\n              <tr>\n                <th>#</th>\n                <th>Посетитель</th>\n                <th>Телефон</th>\n                <th>Дата приема</th>\n                <th>Время</th>\n                <th>Статус</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {ticketList.map((ticket, index) => {\n                return (\n                  <ListItem\n                    key={ticket._id}\n                    ticket={ticket}\n                    i={index}\n                    handler={changeItem}\n                    rewrite={openRewriteForm}\n                    statusHandler={editTicketStatus}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        {isActive && <RecordEdit props={{ onClose, editTicketList }} />}\n        {isActiveRewrite && (\n          <RecordOverwrite props={{ onClose, onWrite, services }} />\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/utils/formatDate.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/FormFooter/FormFooter.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/ClientForm/ClientForm.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Employee/Employee.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/TimeTable/TimeTable.js",["366","367","368","369","370","371"],"import React, { useState, useEffect } from \"react\";\n\nimport { formatDate } from \"../../utils/formatDate\";\nimport { YearCalendar } from \"../Calendar/YearCalendar\";\nimport { timeline } from \"../../utils/timeline\";\nimport styles from \"./timetable.module.css\";\nimport { CircleLoader } from \"../CircleLoader\";\nimport { getReadyToSubmission } from \"../../utils/getReadyToSubmission\";\nimport api from \"../../http\";\n\nexport const TimeTable = ({ props }) => {\n  const { preHoliday } = YearCalendar(); //импортируем из годового календаря массив предпраздничных дней\n\n  const { date, employeeId, serviceId, serviceType } = props;\n\n  const [tickets, setTickets] = useState([]); // список выданных тикетов на этот день\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [isFree, setIsFree] = useState(null);\n  const [ready, setReady] = useState(true);\n  const [type, setType] = useState(serviceType);\n\n  const startReceipt = 14; //Время начала приема 14.00\n  const endReceipt = 17; // Окончание приема 17.00\n  const minReceiptTime = 15; // услуга с минимальным временем оказания\n\n  const day = new Date(date);\n  const month = date.getMonth(date);\n\n  const shortDay = preHoliday[month].includes(day.getDate(date)) ? +1 : +0; //Определяем предпраздничный день или нет. Если Да, то время приема на час короче\n\n  const records = timeline(startReceipt, endReceipt, shortDay, minReceiptTime);\n\n  useEffect(() => {\n    setType(serviceType);\n  }, [serviceType]);\n\n  useEffect(() => {\n    setSelectedTime(null); //Обнуляем значение выбранного времени\n\n    const fetchTickets = async () => {\n      try {\n        const data = await api.get(\n          `/tickets/${employeeId}/${formatDate(date)}`\n        );\n        setTickets(data);\n        setIsFree(null);\n      } catch (error) {}\n    };\n    fetchTickets();\n  }, [date, employeeId]);\n\n  useEffect(() => {\n    setReady(false);\n\n    const checkTime = async () => {\n      if (selectedTime === null) {\n        return;\n      }\n\n      //устанавливаем время и записываем в полном формате дату и время выбранное в таблице времени приема\n      const time = selectedTime;\n      const hour = time.slice(0, 2);\n      const minutes = time.slice(3, 5);\n\n      date.setHours(hour);\n      date.setMinutes(minutes, 0);\n\n      localStorage.setItem(\"date\", JSON.stringify(date));\n\n      // отправка запроса с проверкой свободно выбранное время или нет\n\n      try {\n        const checking = await api.get(\n          `/tickets/checkTime/${employeeId}/${selectedTime}`\n        );\n\n        if (checking.length) {\n          setIsFree(false);\n        } //если вернулся пустой массив значит время свободно\n        else {\n          setIsFree(true);\n        }\n      } catch (error) {}\n    };\n\n    setTimeout(() => {\n      setReady(true);\n    }, 1000);\n\n    checkTime();\n  }, [employeeId, selectedTime]);\n\n  useEffect(() => {\n    setIsFree(null);\n  }, [serviceId]);\n\n  //Если пришел массив тикетов, то для каждого элемента запускаем функцию проверки записи\n  if (tickets.length > 0) {\n    tickets.map((ticket) => {\n      let ticketTime = new Date(ticket.date).toLocaleTimeString().slice(0, 5);\n      let type = ticket.serviceType;\n      checkRecords(ticketTime, type);\n    });\n  }\n\n  //функция проверки массива временных меток приема. Если есть тикет с временем, то помечаем эту метку как занятую\n  function checkRecords(ticketTime, type) {\n    records.map((record, index) => {\n      if (record.time === ticketTime) {\n        getMarkTicket(index, type);\n      }\n    });\n  }\n\n  //проверка сколько меток нужно сделать неактивными в зависимости от типа Услуги: Консультация или Подача документов\n  function getMarkTicket(index, type) {\n    if (type === \"submission\") {\n      const k = 60 / minReceiptTime;\n      for (let i = 0; i < k; i++) {\n        records[index + i].isBusy = true;\n      }\n    } else {\n      records[index].isBusy = true;\n    }\n  }\n\n  //проверка возможности записаться на выбранное время в зависимости от выбранного  типа записи\n\n  const submissionCheck = (e, time) => {\n    setSelectedTime(time);\n  };\n\n  /*   if (loading || !ready) {\n    return <CircleLoader />;\n  } */\n\n  let filteredData = [];\n  if (type === \"consultation\") {\n    filteredData = records.filter((item) => item.isBusy !== true);\n  }\n  if (type === \"submission\") {\n    records.map((record, index) => {\n      getReadyToSubmission(records, index, record, type);\n    });\n    filteredData = records.filter((record) => record.access === true);\n  }\n\n  let items = filteredData.map((record, index) => {\n    return (\n      <div\n        key={index}\n        data-index={index}\n        value={record.time}\n        className={styles.box}\n        onClick={(e) => submissionCheck(e, record.time)}\n      >\n        {record.time}\n      </div>\n    );\n  });\n\n  const currentDay = date.getDay();\n\n  if (currentDay === 5 || currentDay === 6 || currentDay === 0) {\n    items = [];\n  }\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div className={styles.Timebox}>{items}</div>\n      <div style={{ width: \"100%\", textAlign: \"center\" }}>\n        {isFree === null ? null : isFree ? (\n          <h5>{selectedTime} свободно</h5>\n        ) : (\n          <h5>{selectedTime} уже занято</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/UI/DropDown/DropDown.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/Calendar/Calendar.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/Input/Input.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/SearchForm/SearchForm.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/RadioSelect/RadioSelect.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Tickets/List/ListItem.js",[],"/Users/savrasov/Projects/queueApp/client/src/utils/timeline.js",[],"/Users/savrasov/Projects/queueApp/client/src/utils/getReadyToSubmission.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Tickets/RecordOverwrite/RecordOverwrite.js",["372","373","374","375","376","377","378"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ClientForm } from \"../../ClientForm/ClientForm\";\nimport { DropDown } from \"../../../UI/DropDown/DropDown\";\nimport { RadioSelect } from \"../../../UI/RadioSelect/RadioSelect\";\nimport { Calendar } from \"../../../UI/Calendar/Calendar\";\nimport { Employee } from \"../../Employee/Employee\";\nimport { TimeTable } from \"../../TimeTable/TimeTable\";\nimport { FormFooter } from \"../../FormFooter/FormFooter\";\n\nimport { formatDate } from \"../../../utils/formatDate\";\nimport api from \"../../../http\";\n\nimport styles from \"./RecordOverwrite.module.css\";\n\nexport const RecordOverwrite = ({ props }) => {\n  const { services } = useSelector((state) => state.services);\n  const { onClose } = props;\n  const clientData = JSON.parse(localStorage.getItem(\"clientData\"));\n\n  const [serviceId, setServiceId] = useState(null);\n  const [ticketsList] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const [userId, setUserId] = useState(null);\n  const [serviceTitle, setServiceTitle] = useState(\"Выберите услугу\");\n  const [employee, setEmployee] = useState([]);\n  const [employeeId, setEmployeeId] = useState(null);\n  const [serviceType, setServiceType] = useState(null);\n\n  const filterDay = true;\n  const minDate = true;\n\n  const {\n    firstname,\n    lastname,\n    surname,\n    email,\n    phone,\n    note: ticketNote,\n    _id,\n    user,\n    service,\n    status,\n  } = clientData[0];\n\n  const [form] = useState({\n    firstname,\n    lastname,\n    surname,\n    email,\n    phone,\n  });\n\n  const disabled = true;\n\n  useEffect(() => {\n    if (!userId) {\n      return;\n    }\n    const getEmployee = async () => {\n      try {\n        const response = await api(\"/client/users/\", {\n          params: { userId, date: formatDate(date) },\n        });\n        setEmployee(response.data);\n        setEmployeeId(response.data._id);\n      } catch (error) {}\n    };\n    getEmployee();\n  }, [date, userId]);\n\n  const changeService = (e) => {\n    setServiceTitle(e.target.innerText);\n    setDate(new Date());\n    setUserId(e.target.dataset.employee);\n    setServiceId(e.target.dataset.serviceId);\n  };\n\n  const updateDate = (d) => {\n    setDate(d);\n  };\n\n  const onSelect = (e) => {\n    if (e) {\n      setServiceType(e.target.dataset.stype);\n    }\n  };\n\n  const onWrite = () => {};\n\n  document.addEventListener(\"keydown\", function (event) {\n    if (event.code === \"Escape\") {\n      onClose();\n    }\n  });\n\n  return (\n    <div>\n      <div className={styles.popup}>\n        <div className={styles.MainContainer}>\n          <div className={styles.recordContent}>\n            <h4 className={styles.recordHeader}>Создаем запись</h4>\n\n            <ClientForm props={{ form, disabled }} />\n            <h5>Данные об услуге</h5>\n            <div className={styles.content}>\n              <h6>Выберите услугу</h6>\n              <DropDown props={{ services, serviceTitle, changeService }} />\n            </div>\n            <div className={styles.content}>\n              <h6>Тип услуги:</h6>\n              <div>\n                <RadioSelect\n                  type=\"radio\"\n                  group=\"group\"\n                  data=\"consultation\"\n                  value=\"Консультация (длительность приема 15 минут)\"\n                  onChange={onSelect}\n                />\n                <RadioSelect\n                  type=\"radio\"\n                  group=\"group\"\n                  data=\"submission\"\n                  value=\"Подача документов (длительность приема 1 час)\"\n                  onChange={onSelect}\n                />\n              </div>\n            </div>\n            {employee && <Employee props={{ employee }} />}\n            <h5>Дата и время приема</h5>\n            <div className={styles.content}>\n              <h6 style={{ paddingTop: \"30px\" }}>Выберите дату:</h6>\n              <Calendar props={{ updateDate, date, filterDay, minDate }} />\n            </div>\n\n            <div className={styles.content}>\n              <h6>Доступное время для записи</h6>\n              <div className={styles.TimeBoxContainer}>\n                {employeeId !== null && (\n                  <TimeTable props={{ date, employeeId, serviceType }} />\n                )}\n              </div>\n            </div>\n            <FormFooter props={{ onClose, onWrite }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Tickets/RecordEdit/RecordEdit.js",["379","380","381"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { ClientForm } from \"../../ClientForm/ClientForm\";\n\nimport { useMessage } from \"../../../hooks/message.hook\";\n\nimport styles from \"./recordEdit.module.css\";\nimport { FormFooter } from \"../../FormFooter/FormFooter\";\nimport { useSelector } from \"react-redux\";\nimport api from \"../../../http\";\n\nexport const RecordEdit = ({ props }) => {\n  const { token } = useSelector((state) => state.userRole);\n  const { services } = useSelector((state) => state.services);\n  const clientData = JSON.parse(localStorage.getItem(\"clientData\"));\n  const { onClose, editTicketList } = props;\n\n  const message = useMessage();\n\n  const {\n    firstname,\n    lastname,\n    surname,\n    email,\n    phone,\n    note: ticketNote,\n    _id,\n    user,\n    date,\n    service,\n    serviceType,\n    status,\n  } = clientData[0];\n\n  const [form] = useState({\n    firstname,\n    lastname,\n    surname,\n    email,\n    phone,\n  });\n  const [serviceTitle, setServiceTitle] = useState([]);\n  const [note, setNote] = useState(ticketNote);\n\n  const statusObject = {\n    pending: \"В работе\",\n    consultation: \"Исполнено(проведена консультация)\",\n    statement: \"Исполнено(принято заявление)\",\n    notStatement: \"Исполнено(заявитель отказался подавать заяаление)\",\n    refusal: \"Отказ от записи\",\n    notShow: \"Не явился\",\n  };\n\n  useEffect(() => {\n    const current = services.filter((item) => item._id === service);\n    setServiceTitle(current[0].title);\n  }, []);\n\n  const onWrite = async () => {\n    try {\n      const response = await api.patch(`/tickets/notes/update/${_id}`, {\n        note,\n      });\n      editTicketList(_id, note);\n      message(response.data.message);\n    } catch (error) {}\n\n    onClose();\n  };\n\n  document.addEventListener(\"keydown\", function (event) {\n    if (event.code === \"Escape\") {\n      onClose();\n    }\n  });\n\n  return (\n    <div className={styles.popup}>\n      <div className={styles.MainContainer}>\n        <div className={styles.recordContent}>\n          <h4 className={styles.recordHeader}>Редактируем запись</h4>\n          <h5>\n            Статус заявления :{\" \"}\n            <span\n              style={{\n                fontSize: \"0.8em\",\n\n                color: \"green\",\n              }}\n            >\n              {statusObject[status]}\n            </span>\n          </h5>\n\n          <ClientForm props={{ form }} />\n          <h5>Данные об услуге</h5>\n          <h6 style={{ textDecoration: \"underline\" }}>Наименование услуги :</h6>\n          <p>{serviceTitle}</p>\n          <h6 style={{ textDecoration: \"underline\" }}>Тип услуги:</h6>\n          <p>\n            {\" \"}\n            {serviceType === \"consultation\"\n              ? \"Консультация\"\n              : \"Подача документов\"}\n          </p>\n\n          <h5>Дата и время записи</h5>\n          <div>\n            <p>Дата: {new Date(date).toLocaleDateString()}</p>\n            <p>Время: {new Date(date).toLocaleTimeString().slice(0, 5)}</p>\n          </div>\n          <h5> Данные о сотруднике</h5>\n\n          <p>{user.name}</p>\n          <p>кабинет № {user.cabinet}</p>\n          <h5>Примечания:</h5>\n          <small>в поле ниже оставьте свои замечания к данной заявке</small>\n          <div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <textarea\n                  id=\"note\"\n                  className=\"materialize-textarea\"\n                  data-length=\"120\"\n                  name=\"note\"\n                  value={note}\n                  onChange={(e) => setNote(e.target.value)}\n                ></textarea>\n                <label htmlFor=\"Поле для примечаний\"></label>\n              </div>\n            </div>\n          </div>\n          <FormFooter props={{ onClose, onWrite }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/hooks/auth.hook.js",[],["382","383"],"/Users/savrasov/Projects/queueApp/client/src/routes/AdminRoutes.js",[],"/Users/savrasov/Projects/queueApp/client/src/pages/admin/Services/ServiceCreatePage.js",[],"/Users/savrasov/Projects/queueApp/client/src/pages/admin/Users/UserDetailPage.js",["384","385"],"import React, { useState, useEffect } from \"react\";\n\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { Detail } from \"../../../components/Users/Detail\";\n\nimport { useSelector } from \"react-redux\";\nimport api from \"../../../http\";\n\nexport const UserDetailPage = () => {\n  const userId = useParams().id;\n  const { users } = useSelector((state) => state.users);\n\n  const [user, setUser] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchUsers = async () => {\n      try {\n        const response = await api.get(`/users/${userId}`);\n        setUser(response.data);\n      } catch (error) {\n        console.log(error.response.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUsers();\n  }, [userId]);\n\n  return <>{!loading && user && <Detail user={user} />}</>;\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Category/CategoriesList.js",["386","387"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ButtonCreate } from \"../../UI/Buttons/ButtonCreate\";\nimport styles from \"./category.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useMessage } from \"../../hooks/message.hook\";\nimport { ButtonEdit } from \"../../UI/Buttons/ButtonEdit\";\nimport { deleteCategory } from \"../../store/actions/categories\";\nimport { Loader } from \"../Loader\";\n\nexport const CategoriesList = () => {\n  const dispatch = useDispatch();\n  const message = useMessage();\n\n  const { categories, loading } = useSelector((state) => state.categories);\n\n  const onDelete = async (id) => {\n    try {\n      dispatch(deleteCategory(id));\n      message(\"Запись удалена\");\n    } catch (error) {}\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={styles.MainContainer}>\n      <div className=\"row col-s12\">\n        <h4>Категории услуг</h4>\n        <Link to=\"/categories/create\">\n          <ButtonCreate />\n        </Link>\n\n        <div className=\"card table-service padding-10\">\n          <table className=\"striped\">\n            <thead>\n              <tr>\n                <th>№</th>\n                <th>Наименование</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {categories.map((item, index) => {\n                return (\n                  <tr key={item._id}>\n                    <td>{index + 1}</td>\n                    <td>{item.title}</td>\n                    <td>\n                      <Link to={`/categories/edit/${item._id}`}>\n                        <ButtonEdit />\n                      </Link>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn-floating btn-small waves-effect blue darken-2\"\n                        title=\"Удалить\"\n                        target=\"_blank\"\n                        onClick={() => onDelete(item._id)}\n                      >\n                        <i className=\"material-icons\">delete_forever</i>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/pages/admin/Users/UserCreatePage.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Category/CreateCategory.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Users/UsersList.js",["388","389","390"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {  useState } from \"react\";\nimport api from \"../../http\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useMessage } from \"../../hooks/message.hook\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {ButtonCreate} from '../../UI/Buttons/ButtonCreate'\nimport {ButtonEdit} from '../../UI/Buttons/ButtonEdit'\nimport styles from \"./users.module.css\";\n\nimport { Loader } from \"../Loader\";\nimport { deleteUser } from \"../../store/actions/users\";\n\nexport const UsersList = () => {\n  localStorage.setItem(\"link\", JSON.stringify(useLocation()));\n  const dispatch = useDispatch()\n  const message = useMessage();\n  const { users } = useSelector((state) => state.users);\n  const [loading, setLoading] = useState(false);\n\n\n  const deleteHandler =  (id) => {\n    dispatch(deleteUser(id))\n/* \n    setLoading(true);\n    try {\n      const response = await api.delete(`/users/${id}`);\n      message(response.data.message);\n      users.filter(({ _id }) => id !== _id);\n      setLoading(false);\n    } catch (error) {\n      console.log(error.response);\n    } finally {\n      setLoading(false);\n    } */\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={styles.MainContainer}>\n      <div className=\"row col-s12\">\n        <h4> Список сотрудников</h4>\n        <Link to=\"/users/create\">\n          <ButtonCreate/>\n        </Link>\n\n\n        {users.length > 0 ? (\n          <div\n            className=\"card table-service padding-10\"\n            style={{ padding: \"20px\" }}\n          >\n            <table className=\"striped\">\n              <thead>\n                <tr>\n                  <th>№</th>\n                  <th>Логин</th>\n                  <th>Сотрудник</th>\n\n                  <th></th>\n                  <th></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {users.map((item, index) => {\n                  return (\n                    <tr key={item._id}>\n                      <td>{index + 1}</td>\n                      <td>{item.login}</td>\n                      <td>{item.name}</td>\n\n                      <td>\n                        <Link to={`/users/detail/${item._id}`}>\n                          <ButtonEdit />\n                        </Link>\n \n                      </td>\n                      <td>\n                        {\" \"}\n                        <a\n                          className=\"btn-floating btn-small waves-effect blue darken-2\"\n                          title=\"Удалить\"\n                          target=\"_blank\"\n                          style={{ float: \"right\" }}\n                          onClick={() => deleteHandler(item._id)}\n                        >\n                          <i className=\"material-icons\">delete_forever</i>\n                        </a>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div>\n            <h1>Пользователей не найдено</h1>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Category/EditCategory.js",["391"],"import React, { useEffect, useState } from \"react\";\nimport { ButtonSave } from \"../../UI/Buttons/ButtonSave\";\nimport { ButtonCancel } from \"../../UI/Buttons/ButtonCancel\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useMessage } from \"../../hooks/message.hook\";\nimport styles from \"./category.module.css\";\nimport { updateCategory } from \"../../store/actions/categories\";\n\nexport const EditCategory = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const history = useHistory();\n  const message = useMessage();\n\n  const { categories, loading } = useSelector((state) => state.categories);\n\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    const currentCategory = categories.filter(\n      (category) => category._id === id\n    );\n    setTitle(currentCategory[0].title);\n  }, []);\n\n  const changeTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const saveHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateCategory({ id, title }));\n    if (!loading) {\n      message(\"Название категории изменено\");\n      setTimeout(() => {\n        history.push(\"/categories\");\n      }, 1500);\n    }\n  };\n\n  const cancelHandler = () => {\n    history.push(\"/categories\");\n  };\n\n  return (\n    <div className={styles.MainContainer}>\n      <h4>Редактирование категории</h4>\n\n      <form className=\"col s12\">\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <input\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              value={title}\n              onChange={changeTitle}\n            />\n          </div>\n        </div>\n        <div className=\"row\" style={{ float: \"right\" }}>\n          <ButtonSave action={saveHandler} />\n          <ButtonCancel action={cancelHandler} />\n        </div>\n      </form>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Service/ServicesList.js",["392"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useMessage } from \"../../hooks/message.hook\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./service.module.css\";\nimport { ButtonEdit } from \"../../UI/Buttons/ButtonEdit\";\nimport { ButtonCreate } from \"../../UI/Buttons/ButtonCreate\";\nimport { deleteService } from \"../../store/actions/services\";\n\nexport const ServicesList = () => {\n  const { services, isFetching } = useSelector((state) => state.services);\n\n  const dispatch = useDispatch();\n  function sortServiceByFieldTitle(field) {\n    return (a, b) => (a[field] > b[field] ? 1 : -1);\n  }\n\n  services.sort(sortServiceByFieldTitle(\"title\"));\n\n  const history = useHistory();\n  const message = useMessage();\n\n  const deleteHandler = async (id) => {\n    \n    dispatch(deleteService(id));\n    if(!isFetching) {\n      message('Услуга удалена')\n    }\n\n  };\n\n  return (\n    <div className={styles.MainContainer}>\n      <div className=\"row col-s12\">\n        <h4>Список услуг управления</h4>\n        <Link to=\"/services/create\">\n          <ButtonCreate />\n        </Link>\n\n        <div className=\"card table-service padding-10\">\n          <table className=\"striped\">\n            <thead>\n              <tr>\n                <th>№</th>\n                <th>Наименование услуги</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {services.map((item, i = 0) => {\n                return (\n                  <tr key={item._id}>\n                    <td>{i + 1}</td>\n                    <td>{item.title}</td>\n                    <td>\n                      {\" \"}\n                      <Link to={`/service/edit/${item._id}`}>\n                      <ButtonEdit />\n                      </Link>\n \n                    </td>\n                    <td>\n                      {\" \"}\n                      <a\n                        className=\"btn-floating btn-small waves-effect blue darken-2\"\n                        title=\"Удалить\"\n                        target=\"_blank\"\n                        onClick={() => deleteHandler(item._id)}\n                      >\n                        <i className=\"material-icons\">delete_forever</i>\n                      </a>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Service/EditService.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Service/Create.js",["393"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMessage } from \"../../hooks/message.hook\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { CategoryDropdown } from \"../Category/CategoryDropdown\";\nimport { UsersDropdown } from \"../Users/UsersDropdown\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./service.module.css\";\nimport { createService } from \"../../store/actions/services\";\n\n\nexport const CreateService = () => {\n  const { users } = useSelector((state) => state.users);\n  const { categories } = useSelector((state) => state.categories);\n  const { errors } = useSelector(state => state.services)\n  const dispatch = useDispatch()\n\n  const [form, setForm] = useState({\n    title: \"\",\n    time: \"\",\n    user: [],\n    category: [],\n  });\n\n  const [unSelectedCategories, setUnSelectedCategories] = useState(categories);\n  const [unSelectedUsers, setUnSelectedUsers] = useState(users);\n\n  const history = useHistory();\n\n  const message = useMessage();\n\n  useEffect(() => {\n    M.AutoInit();\n  }, []);\n\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n\n  useEffect(() => {\n    if(!errors) {\n      return\n    }\n    console.log(errors)\n    errors.map(error => message(error.msg))\n  },[errors])\n\n  useEffect(() => {\n    const filteredCats = form.category.map(JSON.stringify);\n    const unselected = categories\n      .map(JSON.stringify)\n      .filter((e) => !filteredCats.includes(e))\n      .map(JSON.parse);\n\n    setUnSelectedCategories(unselected);\n  }, [form.category, categories]);\n\n  useEffect(() => {\n    const filteredUsers = form.user.map(JSON.stringify);\n    const unselected = users\n      .map(JSON.stringify)\n      .filter((e) => !filteredUsers.includes(e))\n      .map(JSON.parse);\n\n    setUnSelectedUsers(unselected);\n  }, [form.user, users]);\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  //Добавление в список Выбранных категорий\n\n  const addHandler = (data) => {\n    const selectedCats = categories.filter(\n      (categorie) => categorie._id === data\n    );\n\n    const result = [...form.category];\n\n    result.push(...selectedCats);\n\n    setForm({ ...form, category: result });\n  };\n\n  //Добавление в список Выбранных сотрудников\n\n  const addUserHandler = (data) => {\n    const result = [...form.user];\n    result.push(data);\n    setForm({ ...form, user: result });\n  };\n\n  // Удаление категории из списка выбранных\n  const deleteHandler = (data) => {\n    const result = form.category.filter((item) => {\n      return item._id !== data;\n    });\n\n    setForm({ ...form, category: result });\n  };\n\n  //Удаление сотрудника из списка выбранных\n\n  const deleteUserHandler = (data) => {\n    const result = form.user.filter((item) => {\n      return item._id !== data._id;\n    });\n\n    setForm({ ...form, user: result });\n  };\n\n  const cancelHandler = () => {\n    history.push(\"/allservices\");\n  };\n\n  const createHandler = async () => {\n\n    dispatch(createService(form))\n  \n  };\n\n  return (\n    <div className={styles.MainContainer}>\n      <div className=\"row\">\n        <h4>Создаем новую услугу</h4>\n        <form className=\"col s12\">\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <textarea\n                id=\"title\"\n                name=\"title\"\n                type=\"text\"\n                className=\"materialize-textarea\"\n                onChange={changeHandler}\n              />\n              <label htmlFor=\"title\">Название</label>\n            </div>\n            <CategoryDropdown\n              categories={unSelectedCategories}\n              category={form.category}\n              handler={addHandler}\n              deleteHandler={deleteHandler}\n            />\n            <div className=\"input-field col s4\">\n              <input\n                placeholder=\"Время,мин\"\n                id=\"time\"\n                type=\"text\"\n                name=\"time\"\n                className=\"validate\"\n                onChange={changeHandler}\n              />\n              <label htmlFor=\"time\">Время оказания</label>\n            </div>\n            <UsersDropdown\n              users={unSelectedUsers}\n              user={form.user}\n              handler={addUserHandler}\n              deleteHandler={deleteUserHandler}\n            />\n          </div>\n          <div className=\"row\" style={{ float: \"right\" }}>\n            <a\n              className=\"waves-effect waves-light btn\"\n              style={{ margin: \"2rem\" }}\n              onClick={createHandler}\n            >\n              Сохранить\n            </a>\n            <a className=\"waves-effect waves-light btn\" onClick={cancelHandler}>\n              Отмена\n            </a>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Users/Detail.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Users/Create.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Users/UsersDropdown.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/Category/CategoryDropdown.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/actions/users.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/actions/services.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonEdit.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonCreate.js",[],"/Users/savrasov/Projects/queueApp/client/src/store/ticketsReducer.js",["394"],"const GET_TICKETS = \"GET_TICKETS\"; //список заявок текущего пользователя системы\nconst LOADING = \"LOADING\"; //статус загрузки заявок\nconst END_LOADING = \"END_LOADING\"; //окончание загрузки\nconst DELETE_TICKET = \"DELETE_TICKET\";\nconst FILTER_BY_DATE = \"FILTER_BY_DATE\"; //список заявок на выбранную дату\nconst UPDATE_STATUS = \"UPDATE_STATUS\"; // обновление статуса заявки выбранного тикета\n\nconst initialState = {\n  isLoading: false,\n  tickets: [],\n  ticketsByDate: [],\n};\n\nexport const ticketsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_TICKETS:\n      return {\n        ...state,\n        tickets: [...action.payload],\n        isLoading: false,\n      };\n    case DELETE_TICKET:\n      const filteredTickets = state.tickets.filter(\n        (ticket) => ticket._id !== action.payload\n      );\n      return {\n        ...state,\n        tickets: [...filteredTickets],\n        isLoading: false,\n      };\n    case FILTER_BY_DATE:\n      const date = state;\n      const filterByDate = state.tickets.filter(\n        (ticket) => ticket.date === action.payload\n      );\n      return {\n        ...state,\n        isLoading: false,\n        ticketsByDate: [...filterByDate],\n      };\n\n    case UPDATE_STATUS:\n      const updateState = { ...state };\n      updateState.tickets.forEach((ticket) => {\n        if (ticket._id === action.payload._id) {\n          ticket.status = action.payload.status;\n        }\n      });\n      return {\n        ...state,\n        tickets: [...updateState.tickets],\n        isLoading: false,\n      };\n\n    case END_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getTickets = (payload) => ({ type: GET_TICKETS, payload });\nexport const filterByDate = (payload) => ({ type: FILTER_BY_DATE, payload });\nexport const deleteTicket = (payload) => ({ type: DELETE_TICKET, payload });\nexport const updateTicket = (payload) => ({ type: UPDATE_STATUS, payload });\nexport const loading = () => ({ type: LOADING });\nexport const endLoading = () => ({ type: END_LOADING });\n","/Users/savrasov/Projects/queueApp/client/src/store/actions/tickets.js",["395"],"import api from \"../../http\";\nimport {\n  filterByDate,\n  getTickets,\n  loading,\n  updateTicket,\n} from \"../ticketsReducer\";\n\nexport const getUserTicketsFromAPI = (userId) => {\n  return (dispatch) => {\n    dispatch(loading());\n    api\n      .get(`/tickets/${userId}`)\n      .then((response) => {\n        console.log(response);\n        dispatch(getTickets(response.data));\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n};\n\nexport const updateTicketStatus = (data) => {\n  console.log(data);\n  return (dispatch) => {\n    dispatch(loading());\n    api\n      .patch(`/tickets/status/update`, { ...data })\n      .then((response) => {\n        console.log(response);\n        dispatch(updateTicket(response.data));\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n};\n","/Users/savrasov/Projects/queueApp/client/src/UI/accountIcon/Icon.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonCancel.js",[],"/Users/savrasov/Projects/queueApp/client/src/UI/Buttons/ButtonSave.js",[],"/Users/savrasov/Projects/queueApp/client/src/pages/visitor/HomePage.js",["396"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Request } from \"../../components/VisitorRequest/Request\";\nimport styles from \"./styles.module.css\";\n\nexport const HomePage = () => {\n  const { userId, name } = useSelector((state) => state.userRole);\n\n  return (\n    <div className={styles.MainContainer}>\n      {name === \"\" ? (\n        <div>\n          <p className={styles.alertMessage}>\n            Вы еще не заполнили свой Профиль. Данная информация пригодится при\n            оформлении заявки.\n          </p>\n          <p>\n            Чтобы заполнить информацию о себе нажмите на кружок с вопросительным\n            знаком в правом верхнем углу и перейдите в свой Профиль\n          </p>\n        </div>\n      ) : null}\n      <Request />\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/VisitorRequest/Request.js",["397"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const Request = () => {\n  const { userId } = useSelector((state) => state.userRole);\n  const { tickets } = useSelector((state) => state.tickets);\n  const visitorRequests = tickets.filter(\n    (ticket) => ticket.visitorId === userId\n  );\n\n  return (\n    <div>\n      <h4>Мои заявки</h4>\n      <hr />\n      {visitorRequests.length ? (\n        visitorRequests.map((item) => {\n          <div>{item.status}</div>;\n        })\n      ) : (\n        <p>У вас пока нет созданных заявок</p>\n      )}\n    </div>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/Account/userAccount.js",["398","399","400","401"],"/Users/savrasov/Projects/queueApp/client/src/components/Account/UserAccount.js",[],"/Users/savrasov/Projects/queueApp/client/src/components/UserProfile/UserProfile.js",["402"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./profile.module.css\";\nimport M from \"materialize-css\";\nimport { ChangePassword } from \"../ChangePassword/ChangePassword\";\n\nexport const UserProfile = () => {\n  useEffect(() => {\n    M.AutoInit();\n  });\n\n  useEffect(() => {\n    M.updateTextFields();\n  });\n\n  const { userId, name } = useSelector((state) => state.userRole);\n\n  const person = name.split(\" \");\n\n  const [lastname, setLastname] = useState(person[0] || \"\");\n  const [firstname, setFirstname] = useState(person[1] || \"\");\n  const [patronimic, setPatronimic] = useState(person[2] || \"\");\n  const [email, setEmail] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const passChange = (e) => {\n    e.preventDefault();\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <div className={styles.MainProfile}>\n        <h3 style={{ marginBottom: \"1em\" }}>Профиль пользователя</h3>\n\n        <div className={styles.profileData}>\n          <h5>Основная информация</h5>\n          <div className={styles.fullName}>\n            <form class=\"col s12\">\n              <div class=\"row\">\n                <div class=\"input-field col s4\">\n                  <input\n                    id=\"lastname\"\n                    type=\"text\"\n                    class=\"validate\"\n                    value={lastname}\n                    onChange={(e) => setLastname(e.target.value)}\n                  />\n                  <label htmlFor=\"lastname\">Фамилия</label>\n                </div>\n                <div class=\"input-field col s4\">\n                  <input\n                    id=\"firstname\"\n                    type=\"text\"\n                    class=\"validate\"\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                  />\n                  <label htmlFor=\"firstname\">Имя</label>\n                </div>\n                <div class=\"input-field col s4\">\n                  <input\n                    id=\"patronimic\"\n                    type=\"text\"\n                    class=\"validate\"\n                    value={patronimic}\n                    onChange={(e) => setPatronimic(e.target.value)}\n                  />\n                  <label htmlFor=\"patronimic\">Отчество</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={styles.profileData}>\n          <h5>Контактная информация</h5>\n          <div className={styles.fullName}>\n            <form class=\"col s12\">\n              <div class=\"row\">\n                <div class=\"input-field col s4\">\n                  <input id=\"phone\" type=\"text\" class=\"validate\" />\n                  <label htmlFor=\"phone\">Контактный телефон</label>\n                </div>\n                <div class=\"input-field col s4\">\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    class=\"validate\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <label htmlFor=\"email\">Email</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={styles.profileData}>\n          <h5>Учетные данные</h5>\n          <div className={styles.fullName}>\n            <form class=\"col s12\">\n              <div class=\"row\">\n                <div class=\"input-field col s4\">\n                  <input id=\"login\" type=\"text\" class=\"validate\" disabled />\n                  <label htmlFor=\"login\">Логин</label>\n                </div>\n                <div class=\"input-field col s4\">\n                  <input\n                    id=\"password\"\n                    type=\"password\"\n                    class=\"validate\"\n                    disabled\n                  />\n                  <label htmlFor=\"password\">Пароль</label>\n                </div>\n                <div class=\"input-field col s4\">\n                  <button\n                    className=\"btn-small blue darken-1\"\n                    style={{ marginTop: \"10px\" }}\n                    onClick={passChange}\n                  >\n                    Изменить пароль\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div>\n        <ChangePassword isOpen={open} isClose={() => setOpen(false)} />\n      </div>\n    </>\n  );\n};\n","/Users/savrasov/Projects/queueApp/client/src/components/ChangePassword/ChangePassword.js",[],{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","severity":1,"message":"408","line":4,"column":7,"nodeType":"409","messageId":"410","endLine":4,"endColumn":22},{"ruleId":"411","severity":1,"message":"412","line":42,"column":15,"nodeType":"413","endLine":42,"endColumn":59},{"ruleId":"407","severity":1,"message":"414","line":16,"column":9,"nodeType":"409","messageId":"410","endLine":16,"endColumn":22},{"ruleId":"411","severity":1,"message":"412","line":48,"column":15,"nodeType":"413","endLine":48,"endColumn":59},{"ruleId":"407","severity":1,"message":"415","line":5,"column":10,"nodeType":"409","messageId":"410","endLine":5,"endColumn":22},{"ruleId":"407","severity":1,"message":"416","line":12,"column":23,"nodeType":"409","messageId":"410","endLine":12,"endColumn":37},{"ruleId":"407","severity":1,"message":"417","line":1,"column":38,"nodeType":"409","messageId":"410","endLine":1,"endColumn":48},{"ruleId":"403","replacedBy":"418"},{"ruleId":"405","replacedBy":"419"},{"ruleId":"420","severity":1,"message":"421","line":47,"column":6,"nodeType":"422","endLine":47,"endColumn":18,"suggestions":"423"},{"ruleId":"424","severity":1,"message":"425","line":77,"column":29,"nodeType":"426","messageId":"427","endLine":77,"endColumn":31},{"ruleId":"407","severity":1,"message":"415","line":7,"column":10,"nodeType":"409","messageId":"410","endLine":7,"endColumn":22},{"ruleId":"407","severity":1,"message":"428","line":19,"column":10,"nodeType":"409","messageId":"410","endLine":19,"endColumn":15},{"ruleId":"420","severity":1,"message":"429","line":91,"column":6,"nodeType":"422","endLine":91,"endColumn":32,"suggestions":"430"},{"ruleId":"424","severity":1,"message":"425","line":99,"column":26,"nodeType":"426","messageId":"427","endLine":99,"endColumn":28},{"ruleId":"424","severity":1,"message":"425","line":108,"column":33,"nodeType":"426","messageId":"427","endLine":108,"endColumn":35},{"ruleId":"424","severity":1,"message":"425","line":142,"column":33,"nodeType":"426","messageId":"427","endLine":142,"endColumn":35},{"ruleId":"407","severity":1,"message":"431","line":21,"column":10,"nodeType":"409","messageId":"410","endLine":21,"endColumn":19},{"ruleId":"407","severity":1,"message":"432","line":22,"column":10,"nodeType":"409","messageId":"410","endLine":22,"endColumn":21},{"ruleId":"407","severity":1,"message":"433","line":39,"column":11,"nodeType":"409","messageId":"410","endLine":39,"endColumn":21},{"ruleId":"407","severity":1,"message":"434","line":40,"column":5,"nodeType":"409","messageId":"410","endLine":40,"endColumn":8},{"ruleId":"407","severity":1,"message":"435","line":41,"column":5,"nodeType":"409","messageId":"410","endLine":41,"endColumn":9},{"ruleId":"407","severity":1,"message":"436","line":42,"column":5,"nodeType":"409","messageId":"410","endLine":42,"endColumn":12},{"ruleId":"407","severity":1,"message":"437","line":43,"column":5,"nodeType":"409","messageId":"410","endLine":43,"endColumn":11},{"ruleId":"407","severity":1,"message":"417","line":1,"column":27,"nodeType":"409","messageId":"410","endLine":1,"endColumn":37},{"ruleId":"407","severity":1,"message":"438","line":12,"column":11,"nodeType":"409","messageId":"410","endLine":12,"endColumn":16},{"ruleId":"420","severity":1,"message":"439","line":56,"column":6,"nodeType":"422","endLine":56,"endColumn":8,"suggestions":"440"},{"ruleId":"403","replacedBy":"441"},{"ruleId":"405","replacedBy":"442"},{"ruleId":"407","severity":1,"message":"443","line":3,"column":21,"nodeType":"409","messageId":"410","endLine":3,"endColumn":32},{"ruleId":"407","severity":1,"message":"444","line":11,"column":11,"nodeType":"409","messageId":"410","endLine":11,"endColumn":16},{"ruleId":"407","severity":1,"message":"445","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":26},{"ruleId":"407","severity":1,"message":"446","line":1,"column":28,"nodeType":"409","messageId":"410","endLine":1,"endColumn":36},{"ruleId":"407","severity":1,"message":"447","line":3,"column":8,"nodeType":"409","messageId":"410","endLine":3,"endColumn":11},{"ruleId":"407","severity":1,"message":"448","line":17,"column":9,"nodeType":"409","messageId":"410","endLine":17,"endColumn":16},{"ruleId":"407","severity":1,"message":"449","line":19,"column":19,"nodeType":"409","messageId":"410","endLine":19,"endColumn":29},{"ruleId":"420","severity":1,"message":"450","line":26,"column":6,"nodeType":"422","endLine":26,"endColumn":8,"suggestions":"451"},{"ruleId":"407","severity":1,"message":"452","line":22,"column":9,"nodeType":"409","messageId":"410","endLine":22,"endColumn":16},{"ruleId":"420","severity":1,"message":"453","line":47,"column":5,"nodeType":"422","endLine":47,"endColumn":13,"suggestions":"454"},{"ruleId":"407","severity":1,"message":"455","line":37,"column":13,"nodeType":"409","messageId":"410","endLine":37,"endColumn":17},{"ruleId":"407","severity":1,"message":"456","line":3,"column":3,"nodeType":"409","messageId":"410","endLine":3,"endColumn":15},{"ruleId":"407","severity":1,"message":"457","line":7,"column":11,"nodeType":"409","messageId":"410","endLine":7,"endColumn":17},{"ruleId":"424","severity":1,"message":"425","line":16,"column":36,"nodeType":"426","messageId":"427","endLine":16,"endColumn":38},{"ruleId":"407","severity":1,"message":"458","line":3,"column":23,"nodeType":"409","messageId":"410","endLine":3,"endColumn":34},{"ruleId":"407","severity":1,"message":"457","line":7,"column":11,"nodeType":"409","messageId":"410","endLine":7,"endColumn":17},{"ruleId":"407","severity":1,"message":"459","line":7,"column":19,"nodeType":"409","messageId":"410","endLine":7,"endColumn":34},{"ruleId":"460","severity":2,"message":"461","line":7,"column":39,"nodeType":"409","endLine":7,"endColumn":50},{"ruleId":"407","severity":1,"message":"457","line":16,"column":11,"nodeType":"409","messageId":"410","endLine":16,"endColumn":17},"no-native-reassign",["462"],"no-negated-in-lhs",["463"],"no-unused-vars","'SUCCESS_MESSAGE' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'logoutHandler' is assigned a value but never used.","'CircleLoader' is defined but never used.","'setServiceList' is assigned a value but never used.","'useContext' is defined but never used.",["462"],["463"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'tickets'. Either include them or remove the dependency array.","ArrayExpression",["464"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ready' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.",["465"],"'serviceId' is assigned a value but never used.","'ticketsList' is assigned a value but never used.","'ticketNote' is assigned a value but never used.","'_id' is assigned a value but never used.","'user' is assigned a value but never used.","'service' is assigned a value but never used.","'status' is assigned a value but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'service' and 'services'. Either include them or remove the dependency array.",["466"],["462"],["463"],"'useLocation' is defined but never used.","'users' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'message' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categories' and 'id'. Either include them or remove the dependency array.",["467"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["468"],"'date' is assigned a value but never used.","'filterByDate' is defined but never used.","'userId' is assigned a value but never used.","'useDispatch' is defined but never used.","'isAuthenticated' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useSelector\" is called in function \"userAccount\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},"Update the dependencies array to be: [clientName, name, tickets]",{"range":"479","text":"480"},"Update the dependencies array to be: [date, employeeId, selectedTime]",{"range":"481","text":"482"},"Update the dependencies array to be: [service, services]",{"range":"483","text":"484"},"Update the dependencies array to be: [categories, id]",{"range":"485","text":"486"},"Update the dependencies array to be: [errors, message]",{"range":"487","text":"488"},[1339,1351],"[clientName, name, tickets]",[2790,2816],"[date, employeeId, selectedTime]",[1489,1491],"[service, services]",[896,898],"[categories, id]",[1356,1364],"[errors, message]"]